# HELK sysmon filter conf file
# HELK build Stage: Alpha
# Author: Roberto Rodriguez (@Cyb3rWard0g)
# License: GPL-3.0

filter {
  if [log_name] == "Microsoft-Windows-Sysmon/Operational"{
    mutate { add_field => { "z_logstash_pipeline" => "1531" } }
    mutate {
      rename => {
        "[user][domain]" => "user_reporter_domain"
        "[user][identifier]" => "user_reporter_sid"
        "[user][name]" => "user_reporter_name"
        "[user][type]" => "user_reporter_type"
        "computer_name" => "host_name"
      }
    }
    if [provider_guid] {
      mutate { gsub => [ "provider_guid", "[{}]", "" ] }
    }
    if [RuleName] {
        kv {
        source => "RuleName"
        field_split => ","
        value_split => "="
        prefix => "mitre_"
        transform_key => "lowercase"
      }
    }
    if [Image] {
      if [Image] =~ /^(\w*$)|^(\w*\..*$)/ {
        mutate { copy => {"Image" => "process_name"} }
      }
      else {
        grok {
          match => { "Image" => ".*\\%{GREEDYDATA:process_name}" }
          tag_on_failure => [ "_Image__grokparsefailure", "_grokparsefailure", "_parsefailure" ]
        }
      }
      mutate {
        rename => {
          "Image" => "process_path"
          "ProcessGuid" => "process_guid"
          "ProcessId" => "process_id"
        }
        gsub => [ "process_guid", "[{}]", "" ]
      }
    }
    if [ParentImage] {
      grok {
        match => { "ParentImage" => ".*\\%{GREEDYDATA:process_parent_name}" }
        tag_on_failure => [ "_ParentImage__grokparsefailure", "_grokparsefailure", "_parsefailure" ]
      }
    }
    if [Hashes] {
      kv {
        source => "Hashes"
        field_split => ","
        value_split => "="
        prefix => "hash_"
        transform_key => "lowercase"
      }
    }
    if [TargetImage] {
      grok { 
        match => { "SourceImage" => ".*\\%{GREEDYDATA:process_name}" }
        tag_on_failure => [ "_SourceImage__grokparsefailure", "_grokparsefailure", "_parsefailure" ]
      }
      grok { 
        match => { "TargetImage" => ".*\\%{GREEDYDATA:target_process_name}" }
        tag_on_failure => [ "_TargetImage__grokparsefailure", "_grokparsefailure", "_parsefailure" ]
      }
      mutate {
        rename => {
          "SourceImage" => "process_path"
          "SourceProcessGUID" => "process_guid"
          "SourceProcessId" => "process_id"
          "TargetImage" => "target_process_path"
          "TargetProcessGUID" => "target_process_guid"
          "TargetProcessId" => "target_process_id"
        }
        gsub => [
          "process_guid", "[{}]", "",
          "target_process_guid", "[{}]", ""
        ]
      }
    }
    if [User] {
      grok {
        match => { "User" => "%{GREEDYDATA:user_domain}\\%{GREEDYDATA:user_name}" }
        tag_on_failure => [ "_User__grokparsefailure", "_grokparsefailure", "_parsefailure" ]
      }
    }
    if [event_id] == 1 {
      mutate {
        add_field => { "action" => "processcreate" }
        rename => {
          "CommandLine" => "process_command_line"
          "CurrentDirectory" => "process_current_directory"
          "ParentImage" => "process_parent_path"
          "ParentCommandLine" => "process_parent_command_line"
          "IntegrityLevel" => "process_integrity_level"
          "LogonGuid" => "user_logon_guid"
          "ParentProcessGuid" => "process_parent_guid"
          "ParentProcessId" => "process_parent_id"
          "TerminalSessionId" => "user_session_id"
          "FileVersion" => "file_version"
          "Description" => "file_description"
          "Product" => "file_product"
          "Company" => "file_company"
        }
        gsub => [ "process_parent_guid", "[{}]", "" ]
      }
    }
    if [event_id] == 2 {
      mutate {
        add_field => { "action" => "filecreatetime" }
        rename => { "TargetFileName" => "file_name" }
      }
    }
    if [event_id] == 3 {
      mutate {
        add_field => { "action" => "networkconnect" }
        rename => {
          "DestinationHostname" => "dst_host_name"
          "DestinationPort" => "dst_port"
          "DestinationPortName" => "dst_port_name"
          "Initiated" => "network_initiated"
          "Protocol" => "network_protocol"
          "SourceHostname" => "src_host_name"
          "SourcePort" => "src_port"
          "SourcePortName" => "src_port_name"
        }
      }
    }
    if [event_id] == 4 {
      mutate {
        add_field => { "action" => "sysmonservicestatechanged" }
        rename => {
          "State" => "service_state"
          "Version" => "sysmon_version"
          "SchemaVersion" => "sysmon_schema_version"
        }
      }
    }
    if [event_id] == 6 {
      mutate {
        add_field => { "action" => "driverload" }
        rename => {
          "ImageLoaded" => "driver_loaded"
          "Signature" => "driver_signature"
          "SignatureStatus" => "driver_signature_status"
          "Signed" => "driver_signed"
        }
      }
    }
    if [event_id] == 7 {
      mutate {
        add_field => { "action" => "imageload" }
        rename => {
          "ImageLoaded" => "module_loaded"
          "Signature" => "module_signature"
          "SignatureStatus" => "module_signature_status"
          "Signed" => "module_signed"
        }
      }
    }
    if [event_id] == 8 {
      mutate {
        add_field => { "action" => "createremotethread" }
        rename => {
          "NewThreadId" => "thread_new_id"
          "StartAddress" => "thread_start_address"
          "StartFunction" => "thread_start_function"
          "StartModule" => "thread_start_module"
        }
      }
    }
    if [event_id] == 9 {
      mutate {
        add_field => { "action" => "rawaccessread" }
        rename => { "Device" => "device_name" }
      }
    }
    if [event_id] == 10 {
      mutate {
        add_field => { "action" => "processaccess" }
        rename => {
          "CallTrace" => "process_call_trace"
          "GrantedAccess" => "process_granted_access"
          "SourceThreadId" => "thread_id"
        }
      }
    }
    if [event_id] == 11 {
      mutate {
        add_field => { "action" => "filecreate" }
        rename => { "TargetFilename" => "file_name" }
      }
    }
    if [event_id] == 12 or [event_id] == 13 or [event_id] == 14 {
      mutate {
        add_field => { "action" => "registryevent" }
        rename => {
          "EventType" => "event_type"
          "TargetObject" => "registry_key_path"
          "Details" => "registry_key_value"
        }
      }
    }
    if [event_id] == 15 {
      mutate {
        add_field => { "action" => "filecreatestreamhash" }
        rename => {
          "TargetFilename" => "file_name"
          "Hash" => "hash"
        }
      }
    }
    if [event_id] == 16 {
      kv {
        source => "ConfigurationFileHash"
        value_split => "="
        prefix => "sysmon_config_hash_"
        transform_key => "lowercase"
      }
      mutate {
        add_field => { "action" => "sysmonconfigstatechanged" }
        rename => {
          "State" => "sysmon_configuration_state"
          "Configuration" => "sysmon_configuration"
        }
      }
    }
    if [event_id] == 18 or [event_id] == 17 {
      mutate {
        add_field => { "action" => "pipeevent" }
        rename => { "PipeName" => "pipe_name" }
      }
    }
    if [event_id] == 19 or [event_id] == 20 or [event_id] == 21 {
      mutate {
        add_field => { "action" => "wmievent" }
        rename => {
          "EventType" => "wmi_event_type"
          "Operation" => "wmi_operation"
          "EventNamespace" => "wmi_namespace"
          "Name" => "wmi_name"
          "Query" => "wmi_query"
          "Type" => "wmi_type"
          "Destination" => "wmi_destination"
        }
      }
    }
    date {
			timezone => "UTC"
      match => [ "UtcTime", "YYYY-MM-dd HH:mm:ss.SSS" ]
      tag_on_failure => [ "_sysmon_UtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
    }
    date {
        timezone => "UTC"
        match => [ "CreationUtcTime", "YYYY-MM-dd HH:mm:ss.SSS" ]
        target => "@date_creation"
        tag_on_failure => [ "_sysmon_CreationUtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
    }
    date {
      timezone => "UTC"
      match => [ "PreviousCreationUtcTime", "YYYY-MM-dd HH:mm:ss.SSS" ]
      target => "@date_creation_previous"
      tag_on_failure => [ "_sysmon_PreviousCreationUtcTime_datefailure", "_sysmon_datefailure", "_dateparsefailure" ]
    }
    mutate {
      rename => { "User" => "user_account"}
      remove_field => [
        "message",
        "Hashes",
        "ConfigurationFileHash",
        "UtcTime",
        "CreationUtcTime",
        "PreviousCreationUtcTime",
        "[user]"
      ]
    }
  }
}

